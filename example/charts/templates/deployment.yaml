apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  replicas: {{ .Values.replica }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-pvc
      containers:
        - name: {{ .Release.Name }}
          volumeMounts:
            - mountPath: /app/data
              name: data
          image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: DATABASE_HIKARI
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-cf
                  key: database_hikari
            - name: DATABASE_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-cf
                  key: database_host
            - name: DATABASE_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-cf
                  key: database_port
            - name: DATABASE_DRIVER_CLASS_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-cf
                  key: database_driver_class_name
            - name: DATABASE_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-cf
                  key: database_name
            - name: DATABASE_MAX_POOL_SIZE
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-cf
                  key: database_max_pool_size
            - name: DATABASE_INITIAL_POOL_SIZE
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-cf
                  key: database_initial_pool_size
            - name: DATABASE_MAX_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-cf
                  key: database_max_timeout
            - name: DATABASE_TYPE
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-cf
                  key: database_type
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: database_username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: database_password
            # - name: "DATE_FORMAT_TYPE"
            #   value: "VN"
          ports:
            - containerPort: {{ .Values.port }}
              protocol: TCP
              name: lms-default
